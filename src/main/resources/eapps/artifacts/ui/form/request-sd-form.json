{
  "id": "request-sd-form",
  "formKey": "",
  "title": {
    "ru": "Заявка SD",
    "en": "SD request"
  },
  "description": {},
  "customModule": "",
  "typeRef": "emodel/type@sd-request-type",
  "width": "lg",
  "system": false,
  "i18n": {
    "ru": {
      "resolution_done": "Готово",
      "resolution_notRelevant": "Не актуально",
      "resolution_knownError": "Известная ошибка",
      "resolution_duplicate": "Дубликат",
      "resolution_notReproducible": "Не воспроизводится",
      "sd_priority_low": "Low",
      "sd_priority_medium": "Medium",
      "sd_priority_high": "High",
      "sd_priority_urgent": "Urgent",
      "resolution_links_validation": "Необходимо добавить ссылки через виджет \"Связи документа\""
    },
    "en": {
      "resolution_done": "Done",
      "resolution_notRelevant": "Not relevant",
      "resolution_knownError": "Known error",
      "resolution_duplicate": "Duplicate",
      "resolution_notReproducible": "Not reproducible",
      "sd_priority_low": "Low",
      "sd_priority_medium": "Medium",
      "sd_priority_high": "High",
      "sd_priority_urgent": "Urgent",
      "resolution_links_validation": "Need to add links via the \"Document associations\" widget"
    }
  },
  "definition": {
    "components": [
      {
        "label": {
          "ru": "Регистрационный номер",
          "en": "Registration number"
        },
        "key": "_docNum",
        "disabled": true,
        "clearOnHide": false,
        "defaultValue": "",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "customConditional": "const formMode = _.get(instance, 'options.formMode');\nconst type = _.get(instance, 'options.initiator.type');\n\nif(formMode === \"CREATE\" || type === \"widget\") {\n  show = false;\n}",
        "type": "textfield",
        "input": true,
        "inputMasks": [
          {}
        ]
      },
      {
        "label": {
          "ru": "Columns"
        },
        "key": "columns5",
        "columns": [
          {
            "components": [
              {
                "label": {
                  "ru": "Приоритет"
                },
                "key": "priority",
                "validate": {
                  "required": true
                },
                "clearOnHide": false,
                "dataSrc": "values",
                "data": {
                  "values": [
                    {
                      "label": "sd_priority_low",
                      "value": "low"
                    },
                    {
                      "label": "sd_priority_medium",
                      "value": "medium"
                    },
                    {
                      "label": "sd_priority_high",
                      "value": "high"
                    },
                    {
                      "label": "sd_priority_urgent",
                      "value": "urgent"
                    }
                  ]
                },
                "defaultValue": "medium",
                "customDefaultValue": "value = \"medium\"",
                "allowCalculateOverride": true,
                "optionalWhenDisabled": false,
                "type": "ecosSelect",
                "input": true
              }
            ],
            "type": "column",
            "input": false,
            "key": "column",
            "index": 0
          },
          {
            "index": 1,
            "type": "column",
            "input": false,
            "key": "column",
            "components": [
              {
                "label": {
                  "ru": "Автор",
                  "en": "Author"
                },
                "key": "author",
                "clearOnHide": false,
                "defaultValue": "",
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "textfield",
                "input": true
              }
            ]
          }
        ],
        "oneColumnInViewMode": false,
        "customConditional": "const type = _.get(instance, 'options.initiator.type');\n\nif(type === \"widget\") {\n  show = false;\n}",
        "type": "columns",
        "input": false
      },
      {
        "label": {
          "ru": "Columns"
        },
        "key": "columns4",
        "columns": [
          {
            "components": [
              {
                "label": {
                  "ru": "Инициатор",
                  "en": "Initiator"
                },
                "key": "initiator",
                "clearOnHide": false,
                "currentUserByDefault": true,
                "defaultValue": "",
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "selectOrgstruct",
                "input": true
              }
            ],
            "type": "column",
            "input": false,
            "key": "column",
            "index": 0
          },
          {
            "index": 1,
            "type": "column",
            "input": false,
            "key": "column",
            "components": []
          }
        ],
        "oneColumnInViewMode": false,
        "customConditional": "const formMode = _.get(instance, \"options.formMode\");\nconst type = _.get(instance, \"options.initiator.type\")\nif(type == \"widget\" || formMode == \"CREATE\") {\n  show = false;\n}",
        "type": "columns",
        "input": false
      },
      {
        "customConditional": "const type = _.get(instance, \"options.initiator.type\");\n\nif(type === \"widget\") {\n  show = false;\n}",
        "input": true,
        "key": "horizontalLine3",
        "type": "horizontalLine"
      },
      {
        "label": {
          "ru": "Тема письма",
          "en": "Topic of the letter"
        },
        "key": "letterTopic",
        "validate": {
          "required": true
        },
        "defaultValue": "",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "textfield",
        "input": true
      },
      {
        "label": {
          "ru": "Содержание обращения",
          "en": "Content of the letter"
        },
        "key": "letterContent",
        "validate": {
          "required": true
        },
        "wysiwyg": {
          "theme": "snow"
        },
        "defaultValue": "",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "rows": 10,
        "type": "textarea",
        "input": true
      },
      {
        "label": {
          "ru": "Исполнитель 3-линии ТП",
          "en": "3rd line support implementer"
        },
        "key": "implementerThirdLineSupport",
        "defaultValue": "",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "customConditional": "const formMode = _.get(instance, \"options.formMode\");\n\nif(formMode === \"CREATE\") {\n  show = false;\n}",
        "logic": [
          {
            "name": "log",
            "trigger": {
              "type": "javascript",
              "javascript": "const initiator = data['initiator'].replace(/.*@/, '');\nconst currentUser = user.replace(/.*@/, '');\n\nresult = currentUser === initiator;"
            },
            "actions": [
              {
                "name": "act",
                "type": "property",
                "property": {
                  "label": "Disabled",
                  "value": "disabled",
                  "type": "boolean"
                },
                "state": "true"
              }
            ]
          }
        ],
        "type": "selectOrgstruct",
        "input": true
      },
      {
        "label": {
          "ru": "Columns"
        },
        "key": "columns7",
        "columns": [
          {
            "components": [
              {
                "label": {
                  "ru": "Тип обращения",
                  "en": "Type of petition"
                },
                "key": "petitionType",
                "modalTitle": "",
                "journalId": "petition-types-journal",
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "selectJournal",
                "input": true,
                "queryData": ""
              }
            ],
            "type": "column",
            "input": false,
            "key": "column",
            "index": 0,
            "md": 4
          },
          {
            "md": 4,
            "index": 1,
            "type": "column",
            "input": false,
            "key": "column",
            "components": [
              {
                "label": {
                  "ru": "Вид сервиса",
                  "en": "Type of service"
                },
                "key": "serviceType",
                "clearOnHide": false,
                "modalTitle": "",
                "journalId": "service-types-journal",
                "queryData": "",
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "selectJournal",
                "input": true
              }
            ]
          },
          {
            "md": 4,
            "index": 2,
            "type": "column",
            "input": false,
            "key": "column",
            "components": [
              {
                "label": {
                  "ru": "Модуль системы",
                  "en": "System module"
                },
                "key": "systemModule",
                "modalTitle": "",
                "journalId": "system-module-journal",
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "selectJournal",
                "input": true,
                "queryData": ""
              }
            ]
          }
        ],
        "oneColumnInViewMode": false,
        "customConditional": "const type = _.get(instance, \"options.initiator.type\");\n\nif(type === \"widget\") {\n  show = false;\n}",
        "type": "columns",
        "input": false
      },
      {
        "label": {
          "ru": "Заказчик",
          "en": "Customer"
        },
        "key": "client",
        "disabled": true,
        "validate": {
          "required": true
        },
        "clearOnHide": false,
        "modalTitle": "",
        "journalId": "sd-clients-journal",
        "queryData": "",
        "refreshOn": [
          "defaultClient",
          "currentUserInfo"
        ],
        "customDefaultValue": "const formMode = _.get(instance, \"options.formMode\");\nconst defClient = _.get(data, 'defaultClient.client') || null;\n\nif (formMode === \"CREATE\" && defClient !== null) {\n    value = defClient;\n}",
        "optionalWhenDisabled": false,
        "customConditional": "const type = _.get(instance, \"options.initiator.type\");\n\nif(type === \"widget\") {\n  show = false;\n}",
        "logic": [
          {
            "name": "Hasn't default client",
            "trigger": {
              "type": "javascript",
              "javascript": "const defClient = _.get(data, 'defaultClient.client') || null;\n\nresult = defClient === null;"
            },
            "actions": [
              {
                "name": "Disable off",
                "type": "property",
                "property": {
                  "label": "Disabled",
                  "value": "disabled",
                  "type": "boolean"
                },
                "state": "false"
              }
            ]
          },
          {
            "name": "Current user - Citeck Support",
            "trigger": {
              "type": "javascript",
              "javascript": "const rolesToCheck = [\n  \"currentUserInfo.inFirstLine\",\n  \"currentUserInfo.inTechnologists\", \n  \"currentUserInfo.inLeads\"\n  ];\n\nresult = rolesToCheck.some(role => _.get(data, role) === true);"
            },
            "actions": [
              {
                "name": "Disable Off",
                "type": "property",
                "property": {
                  "label": "Disabled",
                  "value": "disabled",
                  "type": "boolean"
                },
                "state": "false"
              }
            ]
          }
        ],
        "type": "selectJournal",
        "input": true
      },
      {
        "label": {
          "ru": "Резолюция",
          "en": "Resolution"
        },
        "key": "resolution",
        "disabled": true,
        "clearOnHide": false,
        "dataSrc": "values",
        "data": {
          "values": [
            {
              "label": "resolution_done",
              "value": "done"
            },
            {
              "label": "resolution_notRelevant",
              "value": "notRelevant"
            },
            {
              "label": "resolution_duplicate",
              "value": "duplicate"
            },
            {
              "label": "resolution_notReproducible",
              "value": "notReproducible"
            },
            {
              "label": "resolution_knownError",
              "value": "knownError"
            }
          ],
          "headers": [
            {}
          ]
        },
        "searchEnabled": false,
        "defaultValue": "",
        "optionalWhenDisabled": false,
        "customConditional": "const formMode = _.get(instance, \"options.formMode\");\nconst stat = _.get(data, \"statusInfo.status\");\nif(formMode !== \"CREATE\") {\n  show = stat === \"request-closes\" || stat === \"request-approve\";\n} else {\n  show = false;\n}",
        "type": "ecosSelect",
        "input": true
      },
      {
        "label": {
          "ru": "Columns"
        },
        "key": "columns3",
        "columns": [
          {
            "components": [
              {
                "label": {
                  "ru": "Дата/Время первой реакции",
                  "en": "Date/Time first reaction"
                },
                "key": "firstReactionTimestamp",
                "disabled": true,
                "allowInput": false,
                "format": "dd-MM-yyyy HH:mm",
                "clearOnHide": false,
                "datePicker": {
                  "minDate": "",
                  "maxDate": ""
                },
                "timePicker": {
                  "showMeridian": false
                },
                "defaultValue": "",
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "datetime",
                "input": true,
                "suffix": true
              }
            ],
            "type": "column",
            "input": false,
            "key": "column",
            "index": 0,
            "md": 4
          },
          {
            "index": 1,
            "type": "column",
            "input": false,
            "key": "column",
            "components": [
              {
                "label": {
                  "ru": "Дата/Время закрытия",
                  "en": "Closing Date/Time"
                },
                "key": "closedTimestamp",
                "disabled": true,
                "allowInput": false,
                "format": "dd-MM-yyyy HH:mm",
                "clearOnHide": false,
                "datePicker": {
                  "minDate": "",
                  "maxDate": ""
                },
                "timePicker": {
                  "showMeridian": false
                },
                "defaultValue": "",
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "datetime",
                "input": true,
                "suffix": true
              }
            ],
            "md": 4
          },
          {
            "index": 2,
            "type": "column",
            "input": false,
            "key": "column",
            "components": [
              {
                "label": {
                  "ru": "Дата/Время остановки",
                  "en": "Stopping Date/Time"
                },
                "key": "stoppingTimestamp",
                "disabled": true,
                "allowInput": false,
                "format": "dd-MM-yyyy HH:mm",
                "clearOnHide": false,
                "datePicker": {
                  "minDate": "",
                  "maxDate": ""
                },
                "timePicker": {
                  "showMeridian": false
                },
                "defaultValue": "",
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "datetime",
                "input": true,
                "suffix": true
              }
            ],
            "md": 4
          }
        ],
        "oneColumnInViewMode": false,
        "customConditional": "const formMode = _.get(instance, \"options.formMode\");\n\nif(formMode !== \"CREATE\") {\n  show = data.firstReactionTimestamp !== \"\";\n} else {\n  show = false;\n}",
        "type": "columns",
        "input": false
      },
      {
        "label": {
          "ru": "Columns"
        },
        "key": "columns2",
        "columns": [
          {
            "components": [
              {
                "label": {
                  "ru": "Отмена",
                  "en": "Cancel"
                },
                "key": "submit2",
                "action": "event",
                "state": "",
                "showValidations": false,
                "event": "cancel",
                "block": true,
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "button",
                "input": true
              }
            ],
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "md": 3,
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            },
            "index": 0
          },
          {
            "components": [
              {
                "label": "StatusInfo",
                "source": {
                  "type": "record",
                  "record": {
                    "id": "{{recordId}}",
                    "attributes": {
                      "status": "_status?str"
                    }
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "once"
                },
                "key": "statusInfo",
                "type": "asyncData",
                "input": true
              },
              {
                "label": "Default Client",
                "source": {
                  "type": "record",
                  "record": {
                    "id": "service-desk/cfg@default-client",
                    "attributes": {
                      "client": "value"
                    }
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "once"
                },
                "key": "defaultClient",
                "type": "asyncData",
                "input": true
              },
              {
                "key": "letterContentWithoutTags",
                "clearOnHide": false,
                "refreshOn": [
                  "createdAutomaticallyInfo"
                ],
                "calculateValue": "const createdAutomatically = _.get(data, \"createdAutomaticallyInfo.createdAutomatically\");\nconst letterContent = _.get(data, \"letterContent\");\n\nif (createdAutomatically !== true) {\n  value = letterContent.replace(/<[^>]*>/g, \"\");\n}",
                "allowCalculateOverride": true,
                "optionalWhenDisabled": false,
                "type": "hidden",
                "input": true
              }
            ],
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            },
            "index": 1,
            "md": 3
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "components": [
              {
                "label": "Reaction Info",
                "source": {
                  "type": "record",
                  "record": {
                    "id": "{{data}}",
                    "attributes": {
                      "time": "firstReactionTimestamp"
                    }
                  },
                  "forceLoad": false
                },
                "update": {
                  "type": "once"
                },
                "key": "reactionInfo",
                "type": "asyncData",
                "input": true
              },
              {
                "label": "CurrentUserInfo",
                "source": {
                  "type": "record",
                  "forceLoad": true,
                  "record": {
                    "id": "{{recordId}}",
                    "attributes": {
                      "inFirstLine": "_roles.isCurrentUserMemberOf.impl-first-line-role?bool",
                      "inTechnologists": "_roles.isCurrentUserMemberOf.tech-role?bool",
                      "inLeads": "_roles.isCurrentUserMemberOf.lead-tech-role?bool"
                    }
                  }
                },
                "update": {
                  "type": "once"
                },
                "key": "currentUserInfo",
                "type": "asyncData",
                "input": true
              },
              {
                "label": "createdAutomaticallyInfo",
                "source": {
                  "type": "record",
                  "forceLoad": true,
                  "record": {
                    "id": "{{recordId}}",
                    "attributes": {
                      "createdAutomatically": "createdAutomatically?bool"
                    }
                  }
                },
                "update": {
                  "type": "disabled"
                },
                "key": "createdAutomaticallyInfo",
                "type": "asyncData",
                "input": true
              }
            ],
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            },
            "index": 2
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 3,
            "components": [
              {
                "label": {
                  "ru": "Создать",
                  "en": "Submit"
                },
                "key": "submit",
                "state": "",
                "theme": "primary",
                "block": true,
                "disableOnInvalid": true,
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "button",
                "input": true
              }
            ]
          }
        ],
        "oneColumnInViewMode": false,
        "type": "columns",
        "input": false
      }
    ],
    "formId": "request-sd-form"
  },
  "attributes": {},
  "notExists": false
}