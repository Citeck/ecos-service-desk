---
id: sd-request-type
name:
  ru: Заявка SD
  en: SD request
sourceId: emodel/task-tracker
parentRef: emodel/type@task-tracker
formRef: uiserv/form@request-sd-form
inheritForm: false
dispNameTemplate:
  ru: Заявка SD-${_docNum}
  en: Request SD-${_docNum}
numTemplateRef: emodel/num-template@sd-reg-number-template
actions:
  - uiserv/action@add-participant
  - uiserv/action@return-to-work-from-hold
  - uiserv/action@return-to-work-from-close
  - uiserv/action@tasks-actions
  - uiserv/action@log-work-action
associations:
  - id: webLinks
    journalsFromTarget: false
defaultCreateVariant: true
model:
  roles:
    - id: initiator-role
      name:
        ru: Инициатор
        en: Initiator
      attributes:
        - initiator
    - id: impl-first-line-role
      name:
        ru: Исполнитель 1-ой линии ТП
        en: 1st support line implementer
      attributes:
        - implFirstLineSupport
    - id: impl-second-line-role
      name:
        ru: Исполнители 2-ой линии ТП
        en: 2nd support line implementer
      attributes:
        - implSecondLineSupport
    - id: impl-third-line-role
      name:
        ru: Исполнители 3-ей линии ТП
        en: 3rd support line implementers
      attributes:
        - implThirdLineSupport
    - id: lead-tech-role
      name:
        ru: Руководитель ТП
        en: Support lead
      assignees:
        - GROUP_support-lead
    - id: add-partic-role
      name:
        ru: Дополнительный участник
        en: Additional participant
      attributes:
        - additionalParticipant
      computed:
        type: ATTRIBUTE
        config:
          attribute: additionalParticipant[].additionalParticipant?str
    - id: tech-role
      name:
        ru: Технолог ТП
        en: Support technologist
      attributes:
        - technologist
  statuses:
    - id: request-first-line
      name:
        ru: Передано 1-ой линии ТП
        en: Transferred on 1st support line
    - id: request-first-line-work
      name:
        ru: В работе на 1-ой линии ТП
        en: Working on 1st support line
    - id: request-second-line
      name:
        ru: Передано 2-ой линии ТП
        en: Transferred on 2nd support line
    - id: request-second-line-work
      name:
        ru: В работе на 2-ой линии ТП
        en: Working on 2nd support line
    - id: request-third-line
      name:
        ru: Передано 3-ей линии ТП
        en: Transferred on 3rd support line
    - id: request-third-line-work
      name:
        ru: В работе на 3-ей линии ТП
        en: Working on 3rd support line
    - id: request-approve
      name:
        ru: Подтверждение выполнения заявки
        en: Confirmation of request completion
    - id: request-clarification
      name:
        ru: На уточнении
        en: Clarify
    - id: request-hold
      name:
        ru: На удержании
        en: On hold
    - id: request-closes
      name:
        ru: Закрыта
        en: Closed
  attributes:
    - id: _docNum
      name:
        ru: Регистрационный номер
        en: Registration number
      type: NUMBER
    - id: issueNumber
      name:
        ru: Номер задачи
        en: Issue number
      computed:
        type: SCRIPT
        config:
          fn: |-
            var _docNum = value.load('_docNum');
            return "SD" + '-' + _docNum;
        storingType: ON_EMPTY
    - id: issueType
      name:
        ru: Тип задачи
        en: Task type
      computed:
        type: SCRIPT
        config:
          fn: |-
            return "support";
        storingType: ON_EMPTY
    - id: client
      name:
        ru: Заказчик
        en: Customer
      type: ASSOC
      config:
        typeRef: emodel/type@clients-type
      mandatory: true
    - id: initiator
      name:
        ru: Инициатор
        en: Initiator
      type: PERSON
      mandatory: true
    - id: author
      name:
        ru: Автор
        en: author
    - id: petitionChannel
      name:
        ru: Канал обращения
        en: Channel of petition
      computed:
        type: SCRIPT
        config:
          fn: |-
            var defClient = Records.get('service-desk/cfg@default-client').load('value');
            var currentClient = value.load("client?str");
            return defClient === currentClient ? "internal" : "external";
        storingType: NONE
    - id: petitionType
      name:
        ru: Тип обращения
        en: Type of petition
      type: ASSOC
    - id: serviceType
      name:
        ru: Вид сервиса
        en: Type of service
      type: ASSOC
    - id: systemModule
      name:
        ru: Модуль системы
        en: System module
      type: ASSOC
    - id: letterTopic
      name:
        ru: Тема письма
        en: Topic of the letter
    - id: letterContent
      name:
        ru: Содержание обращения
        en: Letter content
    - id: letterContentWithoutTags
      name:
        ru: Содержание обращения без тегов
        en: Letter content without tags
    - id: exampleLink
      name:
        ru: Ссылка на пример
        en: Link to the example
    - id: resolution
      name:
        ru: Резолюция
        en: Resolution
    - id: mark
      name:
        ru: Метка
        en: Mark
      type: ASSOC
    - id: firstReactionTimestamp
      name:
        ru: Дата/Время первой реакции
        en: Date/Time first reaction
      type: DATETIME
    - id: closedTimestamp
      name:
        ru: Дата/Время закрытия
        en: Closing Date/Time
      type: DATETIME
    - id: stoppingTimestamp
      name:
        ru: Дата/Время остановки
        en: Stopping Date/Time
      type: DATETIME
    - id: implementer
      name:
        ru: Исполнитель
        en: Implementer
      type: PERSON
    - id: webLinks
      name:
        ru: Ссылка
        en: Link
      type: ASSOC
      config:
        typeRef: emodel/type@web-url
        child: true
      multiple: true
    - id: comment
      name:
        ru: Комментарий
        en: Comment
    - id: priority
      name:
        ru: Приоритет
        en: Priority
    - id: implFirstLineSupport
      name:
        ru: Исполнители 1-ой линии ТП
        en: Implementer of the 1st line support
      type: AUTHORITY_GROUP
      computed:
        type: SCRIPT
        config:
          fn: |-
            var mappingClient = Records.query({
                "sourceId": "emodel/clients-mapping-type",
                "consistency": "EVENTUAL",
                "language": "predicate",
                "page": {
                    "maxItems": 1
                },
                "query": {
                    "t": "and",
                    "val": [
                        {
                            "att": "_type",
                            "t": "eq",
                            "val": "emodel/type@clients-mapping-type"
                        },
                        {
                            "att": "client",
                            "t": "eq",
                            "val": value.load("client?str")
                        }
                    ]
                },
                "sortBy": [
                    {
                        "ascending": false,
                        "attribute": "_created"
                    }
                ],
            }, {
                id: "?id"
            });

            if (mappingClient.records.length > 0) {
                return Records.get(mappingClient.records[0].id).load("implFirstLineSupport?str");
            } else {
                var defaultMappingClient = Records.query({
                    "sourceId": "emodel/clients-mapping-type",
                    "consistency": "EVENTUAL",
                    "language": "predicate",
                    "page": {
                        "maxItems": 1
                    },
                    "query": {
                        "t": "and",
                        "val": [
                            {
                                "att": "_type",
                                "t": "eq",
                                "val": "emodel/type@clients-mapping-type"
                            },
                            {
                                "att": "client",
                                "t": "empty"
                            }
                        ]
                    },
                    "sortBy": [
                        {
                            "ascending": false,
                            "attribute": "_created"
                        }
                    ],
                }, {
                    id: "?id"
                });
                    return Records.get(defaultMappingClient.records[0].id).load("implFirstLineSupport?str");
                }
        storingType: NONE
    - id: implSecondLineSupport
      name:
        ru: Исполнители 2-ой линии ТП
        en: Implementer of the 2nd line support
      type: AUTHORITY_GROUP
      computed:
        type: SCRIPT
        config:
          fn: |-
            var mappingClient = Records.query({
                "sourceId": "emodel/clients-mapping-type",
                "consistency": "EVENTUAL",
                "language": "predicate",
                "page": {
                    "maxItems": 1
                },
                "query": {
                    "t": "and",
                    "val": [
                        {
                            "att": "_type",
                            "t": "eq",
                            "val": "emodel/type@clients-mapping-type"
                        },
                        {
                            "att": "client",
                            "t": "eq",
                            "val": value.load("client?str")
                        }
                    ]
                },
                "sortBy": [
                    {
                        "ascending": false,
                        "attribute": "_created"
                    }
                ],
            }, {
                id: "?id"
            });

            if (mappingClient.records.length > 0) {
                return Records.get(mappingClient.records[0].id).load("implSecondLineSupport?str");
            } else {
                var defaultMappingClient = Records.query({
                    "sourceId": "emodel/clients-mapping-type",
                    "consistency": "EVENTUAL",
                    "language": "predicate",
                    "page": {
                        "maxItems": 1
                    },
                    "query": {
                        "t": "and",
                        "val": [
                            {
                                "att": "_type",
                                "t": "eq",
                                "val": "emodel/type@clients-mapping-type"
                            },
                            {
                                "att": "client",
                                "t": "empty"
                            }
                        ]
                    },
                    "sortBy": [
                        {
                            "ascending": false,
                            "attribute": "_created"
                        }
                    ],
                }, {
                    id: "?id"
                });
                    return Records.get(defaultMappingClient.records[0].id).load("implSecondLineSupport?str");
                }
        storingType: NONE
    - id: implThirdLineSupport
      name:
        ru: Исполнители 3-ей линии ТП
        en: Implementer of the 3rd line support
      type: AUTHORITY_GROUP
      computed:
        type: SCRIPT
        config:
          fn: |-
            var mappingClient = Records.query({
                "sourceId": "emodel/clients-mapping-type",
                "consistency": "EVENTUAL",
                "language": "predicate",
                "page": {
                    "maxItems": 1
                },
                "query": {
                    "t": "and",
                    "val": [
                        {
                            "att": "_type",
                            "t": "eq",
                            "val": "emodel/type@clients-mapping-type"
                        },
                        {
                            "att": "client",
                            "t": "eq",
                            "val": value.load("client?str")
                        }
                    ]
                },
                "sortBy": [
                    {
                        "ascending": false,
                        "attribute": "_created"
                    }
                ],
            }, {
                id: "?id"
            });

            if (mappingClient.records.length > 0) {
                return Records.get(mappingClient.records[0].id).load("implThirdLineSupport?str");
            } else {
                var defaultMappingClient = Records.query({
                    "sourceId": "emodel/clients-mapping-type",
                    "consistency": "EVENTUAL",
                    "language": "predicate",
                    "page": {
                        "maxItems": 1
                    },
                    "query": {
                        "t": "and",
                        "val": [
                            {
                                "att": "_type",
                                "t": "eq",
                                "val": "emodel/type@clients-mapping-type"
                            },
                            {
                                "att": "client",
                                "t": "empty"
                            }
                        ]
                    },
                    "sortBy": [
                        {
                            "ascending": false,
                            "attribute": "_created"
                        }
                    ],
                }, {
                    id: "?id"
                });
                    return Records.get(defaultMappingClient.records[0].id).load("implThirdLineSupport?str");
                }
        storingType: NONE
    - id: technologist
      name:
        ru: Технолог
        en: Technologist
      type: AUTHORITY_GROUP
      computed:
        type: SCRIPT
        config:
          fn: |-
            var mappingClient = Records.query({
                "sourceId": "emodel/clients-mapping-type",
                "consistency": "EVENTUAL",
                "language": "predicate",
                "page": {
                    "maxItems": 1
                },
                "query": {
                    "t": "and",
                    "val": [
                        {
                            "att": "_type",
                            "t": "eq",
                            "val": "emodel/type@clients-mapping-type"
                        },
                        {
                            "att": "client",
                            "t": "eq",
                            "val": value.load("client?str")
                        }
                    ]
                },
                "sortBy": [
                    {
                        "ascending": false,
                        "attribute": "_created"
                    }
                ],
            }, {
                id: "?id"
            });

            if (mappingClient.records.length > 0) {
                return Records.get(mappingClient.records[0].id).load("technologist?str");
            } else {
                var defaultMappingClient = Records.query({
                    "sourceId": "emodel/clients-mapping-type",
                    "consistency": "EVENTUAL",
                    "language": "predicate",
                    "page": {
                        "maxItems": 1
                    },
                    "query": {
                        "t": "and",
                        "val": [
                            {
                                "att": "_type",
                                "t": "eq",
                                "val": "emodel/type@clients-mapping-type"
                            },
                            {
                                "att": "client",
                                "t": "empty"
                            }
                        ]
                    },
                    "sortBy": [
                        {
                            "ascending": false,
                            "attribute": "_created"
                        }
                    ],
                }, {
                    id: "?id"
                });
                    return Records.get(defaultMappingClient.records[0].id).load("technologist?str");
                }
        storingType: NONE
    - id: implementerThirdLineSupport
      name:
        ru: Исполнитель 3-ей линии ТП
      type: PERSON
    - id: createdAutomatically
      name:
        ru: Создано автоматически
        en: Created automatically
      type: BOOLEAN
    - id: sla_1_state
      name:
        ru: Состояние SLA 1
        en: SLA 1 state
    - id: sla_1_due_date
      name:
        ru: Время SLA 1
        en: SLA 1 time
      type: DATETIME
    - id: sla_1_start_time
      name:
        ru: Время старта SLA 1
        en: SLA 1 start time
      type: DATETIME
    - id: sla_2_state
      name:
        ru: Состояние SLA 2
        en: SLA 2 state
    - id: sla_2_due_date
      name:
        ru: Время SLA 2
        en: SLA 2 time
      type: DATETIME
    - id: sla_2_start_time
      name:
        ru: Время старта SLA 2
        en: SLA 2 start time
    - id: sla_2_last_resume_time
      name:
        ru: Время последнего возобновления SLA 2
        en: SLA 2 last resume time
    - id: sla_2_pause_time
      name:
        ru: SLA 2 время паузы
        en: SLA 2 pause time
      type: DATETIME
    - id: sla_2_spent_time
      name:
        ru: SLA 2 потраченное время
        en: SLA 2 spent time
      type: NUMBER
    - id: additionalParticipant
      name:
        ru: Доп. участник
        en: Add'l participant
      type: ASSOC
      config:
        typeRef: emodel/type@additional-participant
        child: true
      multiple: true
    - id: closingLine
      name:
        ru: Линия закрытия
        en: Closing line
      type: NUMBER
aspects:
  - ref: emodel/aspect@task-comments-broadcastable
